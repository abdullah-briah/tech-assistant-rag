# =============== 1. EMBEDDED TECHNICAL Q&A DATA ===============
TECH_QA = [
    {"question": "RAG nedir?", "answer": "RAG (Retrieval-Augmented Generation), bir dil modelinin yanıtlarını bir bilgi tabanından alınan güncel ve doğru bilgilerle destekleyen bir yapay zeka yöntemidir."},
    {"question": "Yapay Zeka (YZ) nedir?", "answer": "Yapay Zeka, bilgisayarların veya makinelerin insanlar gibi düşünmesi ve öğrenmesi için programlanmasıdır. Problem çözme, nesneleri tanıma ve karar verme gibi görevleri yerine getirebilirler."},
    {"question": "Makine Öğrenimi (ML) nedir?", "answer": "Makine Öğrenimi, YZ'nin bir parçasıdır; bilgisayarların açıkça programlanmadan, sadece verileri kullanarak kalıpları bulup performanslarını zamanla iyileştirdiği süreçtir."},
    {"question": "Veri Bilimi (Data Science) nedir?", "answer": "Veri Bilimi, ham verilerden anlamlı bilgiler çıkarmak, tahminlerde bulunmak ve veriye dayalı kararlar almak için istatistik, makine öğrenmesi ve programlama kullanan bir disiplindir."},
    {"question": "Büyük Veri (Big Data) ne anlama gelir?", "answer": "Geleneksel araçların işleyemeyeceği kadar aşırı büyük, karmaşık ve hızlı akan veri kümeleridir. Genellikle Hacim (Volume), Hız (Velocity) ve Çeşitlilik (Variety) olmak üzere 3V ile tanımlanır."},
    {"question": "Derin Öğrenme (Deep Learning) nedir?", "answer": "Derin Öğrenme, Makine Öğreniminin çok katmanlı yapay sinir ağlarını kullanan uzmanlaşmış bir alt alanıdır. Görüntü ve konuşma tanıma gibi karmaşık görevler için mükemmeldir."},
    {"question": "Doğal Dil İşleme (NLP) nedir?", "answer": "NLP, bilgisayarların insan dillerini (Türkçe veya İngilizce gibi) anlamasına, yorumlamasına ve üretmesine yardımcı olan YZ alanıdır."},
    {"question": "Bilgisayarlı Görü (Computer Vision) nedir?", "answer": "Bilgisayarlı Görü, bilgisayarların dijital görüntüleri ve videoları 'görmesini' ve yorumlamasını sağlayan YZ alanıdır. Yüz tanıma ve sürücüsüz araçlarda kullanılır."},
    {"question": "Makine Öğreniminin (ML) üç ana türü nedir?", "answer": "Üç ana tür şunlardır: Denetimli Öğrenme (etiketli örneklerden öğrenme), Denetimsiz Öğrenme (etiketsiz veride kalıp bulma) ve Pekiştirmeli Öğrenme (ödüllerle deneme yanılma yoluyla öğrenme)."},
    {"question": "Denetimli Öğrenme (Supervised Learning) ne zaman kullanılır?", "answer": "Modelin doğru cevapları (etiketleri) içeren verilerle eğitildiği durumlarda kullanılır. Örneğin, bir resmi 'kedi' olarak etiketleyerek modelin kedi tanımayı öğrenmesi sağlanır."},
    {"question": "Denetimsiz Öğrenme (Unsupervised Learning) ne zaman kullanılır?", "answer": "Veride etiketli çıktı bulunmadığında ve modelin verideki gizli kalıpları veya grupları (kümeleri) kendi başına keşfetmesi gerektiğinde kullanılır."},
    {"question": "Pekiştirmeli Öğrenmenin (Reinforcement Learning) ana hedefi nedir?", "answer": "Ana hedef, bir Ajanın (makinenin) belirli bir Ortamla etkileşime girerek kümülatif Ödülü maksimize eden bir eylem dizisini öğrenmesidir."},
    {"question": "Makine Öğreniminde Sınıflandırma (Classification) nedir?", "answer": "Modelin bir kategori veya etiket tahmin ettiği bir ML görevidir. Örneğin, bir e-postanın 'spam' olup olmadığını veya bir hastalığın mevcut olup olmadığını belirleme."},
    {"question": "Makine Öğreniminde Regresyon (Regression) nedir?", "answer": "Modelin bir kategori yerine sürekli bir sayısal değer tahmin ettiği bir ML görevidir. Örneğin, ev fiyatlarını, hisse senedi değerlerini veya yarınki sıcaklığı tahmin etme."},
    {"question": "Kümeleme (Clustering) nedir?", "answer": "Kümeleme, benzer veri noktalarını otomatik olarak gruplamak için kullanılan bir tekniktir. Örneğin, müşterileri satın alma alışkanlıklarına göre farklı kategorilere ayırmak."},
    {"question": "K-Means nedir?", "answer": "K-Means, en popüler Denetimsiz Kümeleme Algoritmalarından biridir. Veri noktalarını, birbirlerine ne kadar yakın olduklarına bağlı olarak belirli sayıdaki kümeye (K) ayırır."},
    {"question": "Aşırı Uyum (Overfitting) ne demektir?", "answer": "Modelin eğitim verisini ve verideki gürültüyü bile aşırı iyi öğrenmesidir. Eğitim verisinde mükemmel sonuç verir ancak yeni veride kötü performans gösterir."},
    {"question": "Model performansında Yanlılık (Bias) ve Varyans (Variance) nedir?", "answer": "Yanlılık, modeli çok fazla basitleştirmekten kaynaklanan hatadır (Eksik Uyum). Varyans, modeli çok karmaşık hale getirmekten kaynaklanan hatadır (Aşırı Uyum). Veri Bilimi, ikisi arasında bir denge kurmayı hedefler."},
    {"question": "Makine Öğreniminde Doğruluk (Accuracy) nedir?", "answer": "Doğruluk, bir modelin performansını ölçmenin en basit yoludur. Model tarafından yapılan doğru tahminlerin, yapılan toplam tahmin sayısına oranıdır."},
    {"question": "Veri Seti (Dataset) nedir?", "answer": "Bir veri seti, bir elektronik tablo tablosu gibi, birbiriyle ilişkili verilerin bir koleksiyonudur. Makine Öğrenimi modellerinin öğrenmek için kullandığı ham maddedir."},
    {"question": "Veri Biliminde Öznitelik (Feature) nedir?", "answer": "Gözlemlenen olgunun bireysel, ölçülebilir bir özelliğidir. Veri setinizdeki bir sütun gibi düşünebilirsiniz (örneğin: 'Yaş', 'Gelir' veya 'Renk')."},
    {"question": "Öznitelik Mühendisliği (Feature Engineering) nedir?", "answer": "Modelin daha etkili öğrenmesine yardımcı olmak için mevcut özniteliklerden (özelliklerden) yeni, kullanışlı öznitelikler oluşturmak üzere veri hakkındaki bilgiyi kullanma sürecidir."},
    {"question": "Veri Temizleme (Data Cleaning) nedir?", "answer": "Makine Öğrenimi modelinin doğru bir şekilde öğrenebilmesi için hataları düzeltme, eksik değerleri doldurma ve dağınık verileri düzenleme sürecidir."},
    {"question": "Veri Notasyonu (Data Annotation) nedir?", "answer": "Ham verilere (bir görüntüdeki nesnelerin etrafına kutular çizme veya bir metindeki konuşma bölümlerini etiketleme gibi) etiketler veya etiketler ekleme sürecidir. Denetimli Öğrenme için veriyi hazırlar."},
    {"question": "Eğitim Verisi (Training Data) nedir?", "answer": "Makine Öğrenimi modeline ders vermek için kullanılan ana veri alt kümesidir. Model, kalıpları bulmak ve dahili ayarlarını yapmak için bu verilere bakar."},
    {"question": "Test Verisi (Test Data) nedir?", "answer": "Eğitilmiş bir modelin gerçek dünyada ne kadar iyi performans gösterdiğini kontrol etmek için kullanılan, ayrı, daha önce görülmemiş bir veri alt kümesidir."},
    {"question": "Veri Görselleştirme (Data Visualization) neden önemlidir?", "answer": "Veri Görselleştirme, verileri grafikler ve tablolar aracılığıyla görsel olarak temsil eder. Veri bilimcilerin, ham sayılarda gözden kaçabilecek eğilimleri ve kalıpları hızla fark etmelerine yardımcı olur."},
    {"question": "Veri Madenciliği (Data Mining) nedir?", "answer": "Gelişmiş ML tekniklerini kullanmadan önce, büyük veri setlerinde kalıpları, eğilimleri ve değerli içgörüleri keşfetme sürecidir."},
    {"question": "Zaman Serisi Verisi (Time Series Data) nedir?", "answer": "Genellikle düzenli aralıklarla zaman içinde toplanan verilerdir. Örnekler arasında hisse senedi fiyatları, hava durumu okumaları veya aylık satış rakamları bulunur."},
    {"question": "Veride Aykırı Değer (Outlier) nedir?", "answer": "Aykırı değer, diğer tüm veri noktalarından önemli ölçüde farklı olan bir veri noktasıdır. Veri toplama hatası veya gerçek bir aşırı değer olabilir ve genellikle bir modelin doğruluğunu etkiler."},
    {"question": "Boyut İndirgeme (Dimensionality Reduction) nedir?", "answer": "Bir veri setindeki öznitelik (sütun) sayısını azaltma sürecidir. Bu, veriyi basitleştirir, eğitim sürecini hızlandırır ve modelin aşırı uymasını azaltabilir."},
    {"question": "Transfer Öğrenme (Transfer Learning) nedir?", "answer": "Bir görev için eğitilmiş bir modelin (örneğin genel nesneleri tanıma) alınıp, yeni ve ilgili bir göreve (örneğin belirli tıbbi görüntüleri tanıma) uyarlanmasıdır. Zaman ve kaynak tasarrufu sağlar."},
    {"question": "Tekrarlayan Sinir Ağı (RNN) nedir?", "answer": "Zaman serileri, konuşma veya metin gibi sıralı verileri işlemek için tasarlanmış bir Sinir Ağı türüdür. Sıradaki adımlarda önceki adımlardaki bilgileri kullanmasına olanak tanıyan bir 'belleği' vardır."},
    {"question": "Sinir Ağı (Neural Network) nedir?", "answer": "Girişi alan, birçok katmanda işleyen ve bir çıktı üreten, birbirine bağlı düğümlerden (nöronlar) oluşan bir sistemdir. Derin Öğrenmenin temel yapısıdır."},
    {"question": "Kayıp Fonksiyonu (Loss Function) nedir?", "answer": "Kayıp Fonksiyonu, bir modelin tahmini ile doğru cevap arasındaki farkı ölçer. Eğitim sırasında makinenin amacı bu 'kayıp' sayısını mümkün olduğunca küçültmektir."},
    {"question": "Tavsiye Sistemi (Recommendation System) nedir?", "answer": "Kullanıcının geçmiş davranışına veya benzer kullanıcıların davranışına dayanarak, bir kullanıcının neyle ilgilenebileceğini tahmin eden bir ML sistemidir (Netflix veya Amazon'daki öneriler gibi)."},
    {"question": "Chatbot (Sohbet Robotu) ne tür bir örnektir?", "answer": "Bir chatbot, sesli komutlar veya metin sohbetleri aracılığıyla insan konuşmasını taklit eden Doğal Dil İşleme (NLP) ve YZ uygulamasıdır."},
    {"question": "Bir 'Spam Filtresi' ne tür bir örnektir?", "answer": "Spam filtresi, modelin etiketli e-postalarla (spam veya spam değil) eğitildiği Denetimli Sınıflandırma'nın klasik bir örneğidir."},
    {"question": "Kümeleme (Clustering) iş dünyasında ne için kullanılır?", "answer": "İşletmeler genellikle benzer davranışlara sahip müşterileri gruplandırmak ve hedefli pazarlama kampanyaları oluşturmak için Müşteri Segmentasyonu amacıyla kümelemeyi kullanır."},
    {"question": "Veri Bilimcisi (Data Scientist) ne yapar?", "answer": "Veri Bilimcisi, yapılandırılmış ve yapılandırılmamış çeşitli formlardaki verilerden bilgi ve içgörüler çıkarmak için bilimsel yöntemleri, algoritmaları ve sistemleri kullanır."},
    {"question": "Veri Biliminde Bulut (Cloud) nedir?", "answer": "Bulut, fiziksel donanıma sahip olmak yerine, sunucular, depolama ve veritabanları gibi paylaşılan bilgi işlem kaynaklarını internet üzerinden kullanmaktır. Bu, Büyük Veri ile çalışmayı kolaylaştırır."},
    {"question": "IoT nedir ve Veri Bilimi ile nasıl ilişkilidir?", "answer": "IoT, Nesnelerin İnterneti anlamına gelir; internete bağlı fiziksel cihazlardır. Bu cihazlar, Veri Biliminin içgörüler çıkarmak için analiz ettiği devasa miktarda Büyük Veri üretir."},
    {"question": "YZ'de Etik (Ethics) neden önemlidir?", "answer": "Etik çok önemlidir çünkü YZ sistemleri, eğitim verilerinde bulunan yanlılıkları istemeden sürdürebilir veya güçlendirebilir, bu da insanlar için haksız veya zararlı sonuçlara yol açabilir. Etik, YZ'nin sorumlu bir şekilde geliştirilmesini sağlar."},
    {"question": "Bir YZ modelinde Yanlılık (Bias) nedir?", "answer": "Yanlılık, eğitildiği veri dengesiz veya belirli gruplara yönelik olduğu için YZ modelinin haksız veya hatalı tahminler yapmasıdır."},
    {"question": "Makine Öğreniminde Model nedir?", "answer": "Model, belirli kalıpları tanımak üzere eğitilmiş programdır. Eğitimden sonra ona yeni veri (girdi) verebilirsiniz ve size bir tahmin veya karar (çıktı) verecektir."},
    {"question": "Veri Bilimi için hangi programlama dili en iyisidir?", "answer": "Python, Pandas, NumPy ve Scikit-learn gibi birçok kullanımı kolay kütüphaneye sahip olduğu için Veri Biliminde en popüler dildir."},
    {"question": "Python'da 'pandas' nedir?", "answer": "Pandas, hızlı ve verimli veri işleme ve analizi için kullanımı kolay veri yapıları, özellikle DataFrame'i (akıllı bir elektronik tablo tablosu gibi) sağlayan temel bir Python kütüphanesidir."},
    {"question": "Scikit-learn nedir?", "answer": "Scikit-learn, sınıflandırma, regresyon ve kümeleme gibi standart Makine Öğrenimi görevleri için en popüler Python kütüphanesidir. Birçok algoritma için basit ve birleşik bir arayüz sağlar."},
    {"question": "API nedir?", "answer": "API (Application Programming Interface), iki yazılımın birbirleriyle iletişim kurmasını sağlayan bir arayüzdür."},
    {"question": "Algoritma nedir?", "answer": "Algoritma, basitçe bir bilgisayarın belirli bir problemi çözmek veya bir görevi tamamlamak için izlediği adım adım talimatlar veya kurallar dizisidir."},
    {"question": "JSON nedir?", "answer": "JSON (JavaScript Object Notation), veri alışverişi için kullanılan hafif ve okunabilir bir veri formatıdır."},
    {"question": "Cloud computing nedir?", "answer": "Bulut bilişim, internet üzerinden sunucu, depolama ve veritabanı gibi bilişim hizmetlerine erişim sağlar."},
    {"question": "Frontend ve Backend farkı nedir?", "answer": "Frontend, kullanıcının gördüğü arayüz kısmıdır. Backend ise sunucu tarafında veri işleme ve mantık yürütme kısmıdır."},
    {"question": "CSS ne işe yarar?", "answer": "CSS (Cascading Style Sheets), web sayfalarının görünümünü (renk, düzen, font vb.) tanımlamak için kullanılır."},
    {"question": "JavaScript ile Python farkı nedir?", "answer": "JavaScript genellikle tarayıcıda çalışan bir web diliyken, Python genellikle sunucu tarafında veri bilimi ve otomasyon için kullanılır."},
    {"question": "Yapay zeka ve makine öğrenmesi farkı nedir?", "answer": "Yapay zeka, makinelerin insan benzeri görevler yapmasıdır. Makine öğrenmesi ise yapay zekanın bir alt dalıdır ve veriden öğrenme yeteneğidir."},
    {"question": "Python'da pip ne işe yarar?", "answer": "pip, Python kütüphanelerini internetten indirip sisteminize yüklemenizi sağlayan bir paket yönetim aracıdır."},
    {"question": "Python'da 'ModuleNotFoundError' hatası nasıl çözülür?", "answer": "Eksik modülü 'pip install modül_adı' komutuyla yükleyerek bu hatayı giderebilirsiniz."},
    {"question": "Git ve GitHub farkı nedir?", "answer": "Git, kodlarınızı yerel olarak sürüm kontrolü yapmanızı sağlar. GitHub ise Git depolarınızı bulutta saklamanızı ve başkalarıyla paylaşmanızı sağlayan bir platformdur."},
    {"question": "Docker nedir?", "answer": "Docker, uygulamalarınızı bağımlılıklarıyla birlikte 'konteyner' adı verilen izole ortamlarda çalıştırmanızı sağlar."},
    {"question": "ChromaDB nedir?", "answer": "ChromaDB, gömme vektörlerini (embeddings) saklayıp hızlı ve anlamsal arama yapmanızı sağlayan açık kaynaklı bir vektör veritabanıdır."},
    {"question": "LangChain nedir?", "answer": "LangChain, büyük dil modelleriyle zengin uygulamalar geliştirmenizi sağlayan bir çerçevedir (framework)."},
    {"question": "Streamlit nedir?", "answer": "Streamlit, Python ile interaktif web uygulamaları ve veri panoları oluşturmanızı sağlayan açık kaynaklı bir kütüphanedir."},
    {"question": "Gemini API nasıl kullanılır?", "answer": "Google AI Studio'dan bir API anahtarı alın, 'google-generativeai' kütüphanesini kurun ve 'GenerativeModel' sınıfıyla modeli çağırın."},
    {"question": "Embedding (gömme) nedir?", "answer": "Embedding, metinleri sayısal vektörlere dönüştürerek anlamsal benzerliklerin hesaplanmasını sağlayan bir temsil yöntemidir."},
    {"question": "LLM nedir?", "answer": "LLM (Large Language Model), çok büyük miktarda metinle eğitilmiş ve insan benzeri metin üretebilen bir yapay zeka modelidir."},
    {"question": "Vektör veritabanı ne işe yarar?", "answer": "Vektör veritabanı, metinleri embedding'ler halinde saklar ve benzerlik araması yaparak RAG gibi sistemlerde hızlı bağlam getirir."},
    {"question": "YZ öğrenmeye nasıl başlanır?", "answer": "YZ öğrenmeye başlamak için Python ve temel matematik bilgisi önemlidir. Ardından Makine Öğrenimi ve veri bilimi temellerini öğrenmek, küçük projeler yapmak ve Kaggle gibi platformlarda uygulama deneyimi kazanmak faydalıdır."},
    {"question": "YZ nasıl öğrenebilirim?", "answer": "YZ öğrenmeye başlamak için Python ve temel matematik bilgisi önemlidir. Ardından Makine Öğrenimi ve veri bilimi temellerini öğrenmek, küçük projeler yapmak ve Kaggle gibi platformlarda uygulama deneyimi kazanmak faydalıdır."},
    {"question": "YZ öğrenirken hangi online kaynaklar önerilir?", "answer": "Coursera, edX, Udemy ve Fast.ai gibi platformlarda Yapay Zeka ve Makine Öğrenimi kursları vardır. Ayrıca Kaggle ve GitHub projeleri pratik yapmayı sağlar."},
    {"question": "YZ'de öğrenme süreci nasıl hızlandırılır?", "answer": "Teoriyi öğrenirken paralel olarak küçük projeler yapmak, veri setleri ile denemeler yapmak ve açık kaynak kodları incelemek öğrenmeyi hızlandırır."},
    {"question": "YZ projelerinde hangi programlama dilleri sık kullanılır?", "answer": "Python en popüler dildir. R, Julia ve Java da bazı alanlarda kullanılır. Python, kütüphane zenginliği ve topluluk desteği sayesinde en yaygındır."},
    {"question": "YZ ve ML projelerinde hangi veri tipleri ile çalışılır?", "answer": "Yapısal veriler (tablolar), yapısal olmayan veriler (metin, görsel, ses), zaman serisi verileri ve sensör/IoT verileri sık kullanılır."},
    {"question": "YZ'de Model seçimi nasıl yapılır?", "answer": "Model seçimi veri tipi, görev türü (sınıflandırma, regresyon, kümeleme), veri boyutu ve doğruluk performansı kriterlerine göre yapılır."},
    {"question": "Hyperparameter nedir ve neden önemlidir?", "answer": "Hyperparametreler modelin öğrenme sürecini kontrol eden ayarlardır (örneğin öğrenme hızı, katman sayısı). Doğru seçilmesi model performansını ciddi şekilde artırır."},
    {"question": "YZ'de eğitim ve test verisi oranı genellikle nasıl belirlenir?", "answer": "Genellikle verinin %70-%80'i eğitim, %20-%30'u test için ayrılır. Küçük veri setlerinde çapraz doğrulama (cross-validation) tercih edilir."},
    {"question": "Overfitting’i önlemek için hangi yöntemler kullanılır?", "answer": "Daha fazla veri toplamak, Dropout kullanmak, erken durdurma (early stopping), veri artırma (data augmentation) ve model boyutunu küçültmek yaygın yöntemlerdir."},
    {"question": "YZ projelerinde modelin performansını ölçmek için hangi metrikler kullanılır?", "answer": "Sınıflandırma için Accuracy, Precision, Recall, F1-Score; regresyon için MSE, RMSE ve R²; kümeleme için Silhouette Score ve Davies-Bouldin Index gibi metrikler kullanılır."},
    {"question": "YZ öğreniminde hangi matematik konuları önemlidir?", "answer": "Lineer Cebir, İstatistik ve Olasılık, Kalkülüs ve Optimizasyon Yöntemleri Yapay Zeka ve Makine Öğrenimi için temeldir."},
    {"question": "YZ ve ML için hangi kütüphaneler temel kabul edilir?", "answer": "Python için NumPy, Pandas, Matplotlib, Scikit-learn, TensorFlow, PyTorch ve Keras en temel kütüphanelerdir."},
    {"question": "YZ’de NLP öğrenmek için hangi adımlar izlenir?", "answer": "Öncelikle metin ön işleme (tokenization, stemming, lemmatization), ardından kelime embedding (Word2Vec, GloVe), son olarak LLM veya Transformer modelleri üzerinde uygulama yapılır."},
    {"question": "YZ projelerinde Git ve GitHub neden önemlidir?", "answer": "Kod versiyonlarını yönetmek, takım halinde çalışmak ve projeleri paylaşmak için gereklidir. Ayrıca portföy oluşturmak için önemlidir."},
    {"question": "YZ’de Kaggle projeleri ne işe yarar?", "answer": "Gerçek veri setleri üzerinde deneme ve öğrenme fırsatı verir, yarışmalara katılarak yeteneklerinizi geliştirmeyi sağlar ve portföy oluşturur."},
    {"question": "YZ’de etik konuları öğrenmek neden önemlidir?", "answer": "Yanlılık, gizlilik ve yanlış kullanım risklerini anlamak için önemlidir. Etik, YZ uygulamalarının güvenli ve adil olmasını sağlar."},
    {"question": "YZ öğrenirken hata yapmanın önemi nedir?", "answer": "Hata yapmak öğrenme sürecinin bir parçasıdır. Hatalardan ders almak ve model denemeleri yapmak bilgi birikimini artırır."},
    {"question": "YZ ve ML öğreniminde projeler neden önemlidir?", "answer": "Teorik bilgiyi pratiğe dökmek, problem çözme yeteneğini geliştirmek ve portföy oluşturmak için gereklidir."},
    {"question": "YZ öğrenirken topluluklardan nasıl faydalanılır?", "answer": "Kaggle forumları, Stack Overflow, GitHub projeleri ve Discord/Youtube toplulukları sorular sormak, çözümler görmek ve işbirliği yapmak için kullanılır."},
    {"question": "YZ öğreniminde sürekli öğrenme (Continuous Learning) neden önemlidir?", "answer": "YZ alanı hızla değişiyor; yeni modeller, algoritmalar ve yöntemler sürekli ortaya çıkıyor. Güncel kalmak için sürekli öğrenmek gerekir."}
]